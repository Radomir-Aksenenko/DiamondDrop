'use client';

import { useEffect, useState } from 'react';
import spw from '@/lib/spw';
import { SPWUser } from '@/types/spw';
import { validateUserAndSetToken, ValidationData } from '@/lib/auth';
import { isDevelopment, DEV_CONFIG } from '@/lib/config';
import LoadingScreen from '@/components/ui/LoadingScreen';

/**
 * –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SPWMini
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç SPWMini –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –æ—á–∏—â–∞–µ—Ç –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
 */
export default function SPWProvider({ children }: { children: React.ReactNode }) {
  const [isLoading, setIsLoading] = useState(true);
  const [isInitialized, setIsInitialized] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    let mounted = true;

    // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const handleUserValidation = async (user: SPWUser) => {
      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        const validationData: ValidationData = {
          hash: user.hash || "9c51ce16880ef149ac2bbabde38da3c611adb9b9edf073bc99812bf364b252d2",
          accountId: user.accountId || "889e603f-67a3-46f4-bad6-a6221dcb964d",
          username: user.username || "rafael1209",
          minecraftUUID: user.minecraftUUID || "3f5edd2a95b4364a2748d4ec3ad39b",
          roles: user.roles || [],
          isAdmin: user.isAdmin || false,
          timestamp: user.timestamp || Date.now()
        };

        console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', validationData);

        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        const token = await validateUserAndSetToken(validationData);
        
        console.log('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
        
        setIsInitialized(true);
        setIsLoading(false);
        setError(null);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        setError('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        setIsLoading(false);
      }
    };

    // –í dev —Ä–µ–∂–∏–º–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é SPW –∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    if (isDevelopment && DEV_CONFIG.skipAuth) {
      console.log('üîß Dev —Ä–µ–∂–∏–º: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é SPW');
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      const mockSPWUser: SPWUser = {
        username: 'DevUser',
        minecraftUUID: '3f5edd2a95b4364a2748d4ec3ad39b',
        hash: 'dev-hash',
        accountId: 'dev-account-id',
        roles: ['user'],
        isAdmin: false,
        timestamp: Date.now()
      };

      handleUserValidation(mockSPWUser);
      return;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SPWMini
    spw.initialize();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    const handleReady = async () => {
      if (!mounted) return;
      
      console.log('SPW –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
      console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', spw.user);
      
      if (spw.user) {
        await handleUserValidation(spw.user);
      }
    };

    const handleInitResponse = async (user: SPWUser) => {
      if (!mounted) return;
      
      console.log(`–í–æ—à–µ–ª –∫–∞–∫ ${user.username} / ${user.minecraftUUID}`);
      await handleUserValidation(user);
    };

    const handleInitError = (message: string) => {
      if (!mounted) return;
      
      console.error(`–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${message}`);
      setError(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SPWorlds: ${message}`);
      setIsLoading(false);
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    spw.on('ready', handleReady);
    spw.on('initResponse', handleInitResponse);
    spw.on('initError', handleInitError);

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      mounted = false;
      spw.dispose();
    };
  }, []);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ
  if (isLoading) {
    return <LoadingScreen />;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
  if (error) {
    return (
      <div className="fixed inset-0 bg-red-900 flex items-center justify-center z-50">
        <div className="text-center text-white p-8">
          <h1 className="text-2xl font-bold mb-4">–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h1>
          <p className="mb-4">{error}</p>
          <button 
            onClick={() => window.location.reload()} 
            className="bg-red-600 hover:bg-red-700 px-4 py-2 rounded transition-colors"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    );
  }

  return <>{children}</>;
}