'use client';

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import Settings from './Settings';

interface SettingsButtonProps {
  onClick?: () => void;
  className?: string;
}

/**
 * Компонент кнопки настроек
 * Используется для доступа к настройкам профиля
 */
export default function SettingsButton({ onClick, className = '' }: SettingsButtonProps) {
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);

  const handleClick = () => {
    if (onClick) {
      onClick();
    } else {
      setIsSettingsOpen(true);
    }
  };

  return (
    <>
      <motion.button
        onClick={handleClick}
        className={`flex w-[42px] h-[42px] flex-col justify-center items-center gap-[10px] flex-shrink-0 rounded-[8px] bg-[#F9F8FC]/[0.05] cursor-pointer ${className}`}
        whileHover={{ backgroundColor: "rgba(249, 248, 252, 0.1)" }}
        whileTap={{ scale: 0.95 }}
        transition={{ type: "spring", stiffness: 400, damping: 25 }}
        title="Настройки"
      >
        <svg 
          width="18" 
          height="18" 
          viewBox="0 0 18 18" 
          fill="none" 
          xmlns="http://www.w3.org/2000/svg"
          className="w-[18px] h-[18px]"
        >
          <path 
            d="M9 11.25C10.2426 11.25 11.25 10.2426 11.25 9C11.25 7.75736 10.2426 6.75 9 6.75C7.75736 6.75 6.75 7.75736 6.75 9C6.75 10.2426 7.75736 11.25 9 11.25Z" 
            stroke="#F9F8FC" 
            strokeWidth="1.5" 
            strokeLinecap="round" 
            strokeLinejoin="round"
            opacity="0.7"
          />
          <path 
            d="M14.5275 11.25C14.3825 11.5425 14.4075 11.8875 14.5875 12.1575L14.6325 12.2325C14.7775 12.4575 14.8575 12.7275 14.8575 13.005C14.8575 13.2825 14.7775 13.5525 14.6325 13.7775C14.4075 13.9225 14.1375 14.0025 13.86 14.0025C13.5825 14.0025 13.3125 13.9225 13.0875 13.7775L13.0125 13.7325C12.7425 13.5525 12.3975 13.5275 12.105 13.6725C11.8125 13.8175 11.6175 14.1075 11.6175 14.4225V14.535C11.6175 15.1125 11.1525 15.5775 10.575 15.5775H9.42C8.8425 15.5775 8.3775 15.1125 8.3775 14.535V14.4675C8.3775 14.1525 8.1825 13.8625 7.89 13.7175C7.5975 13.5725 7.2525 13.5975 6.9825 13.7775L6.9075 13.8225C6.6825 13.9675 6.4125 14.0475 6.135 14.0475C5.8575 14.0475 5.5875 13.9675 5.3625 13.8225C5.2175 13.5975 5.1375 13.3275 5.1375 13.05C5.1375 12.7725 5.2175 12.5025 5.3625 12.2775L5.4075 12.2025C5.5875 11.9325 5.6125 11.5875 5.4675 11.295C5.3225 11.0025 5.0325 10.8075 4.7175 10.8075H4.605C4.0275 10.8075 3.5625 10.3425 3.5625 9.765V8.61C3.5625 8.0325 4.0275 7.5675 4.605 7.5675H4.6725C4.9875 7.5675 5.2775 7.3725 5.4225 7.08C5.5675 6.7875 5.5425 6.4425 5.3625 6.1725L5.3175 6.0975C5.1725 5.8725 5.0925 5.6025 5.0925 5.325C5.0925 5.0475 5.1725 4.7775 5.3175 4.5525C5.5425 4.4075 5.8125 4.3275 6.09 4.3275C6.3675 4.3275 6.6375 4.4075 6.8625 4.5525L6.9375 4.5975C7.2075 4.7775 7.5525 4.8025 7.845 4.6575C8.1375 4.5125 8.3325 4.2225 8.3325 3.9075V3.795C8.3325 3.2175 8.7975 2.7525 9.375 2.7525H10.53C11.1075 2.7525 11.5725 3.2175 11.5725 3.795V3.8625C11.5725 4.1775 11.7675 4.4675 12.06 4.6125C12.3525 4.7575 12.6975 4.7325 12.9675 4.5525L13.0425 4.5075C13.2675 4.3625 13.5375 4.2825 13.815 4.2825C14.0925 4.2825 14.3625 4.3625 14.5875 4.5075C14.7325 4.7325 14.8125 5.0025 14.8125 5.28C14.8125 5.5575 14.7325 5.8275 14.5875 6.0525L14.5425 6.1275C14.3625 6.3975 14.3375 6.7425 14.4825 7.035C14.6275 7.3275 14.9175 7.5225 15.2325 7.5225H15.345C15.9225 7.5225 16.3875 7.9875 16.3875 8.565V9.72C16.3875 10.2975 15.9225 10.7625 15.345 10.7625H15.2775C14.9625 10.7625 14.6725 10.9575 14.5275 11.25Z" 
            stroke="#F9F8FC" 
            strokeWidth="1.5" 
            strokeLinecap="round" 
            strokeLinejoin="round"
            opacity="0.7"
          />
        </svg>
      </motion.button>
      
      <Settings 
        isOpen={isSettingsOpen} 
        onClose={() => setIsSettingsOpen(false)} 
      />
    </>
  );
}